name: Release build

on:
  push:
    branches:
      - main
      - feature/github_actions

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-documentation:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Build the HTML documentation
    - name: Doxygen Action
      uses: mattnotmitt/doxygen-action@v1.1.0
      with:
          doxyfile-path: ./Doxyfile
          working-directory: .
    
    # Deploy the HTML documentation to GitHub Pages
    - name: GH Pages Deployment
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc/html/
        enable_jekyll: false
        allow_empty_commit: false
        force_orphan: true
        publish_branch: gh-pages

  windows-build:
    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true
  
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
    - run: cmake --build . --config Release
    - run: cmake --build . --config Release --target package

    - name: Create Windows Release
      id: create_windows_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: win_release_v${{ github.run_number }}
        release_name: Windows Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_windows_release.outputs.upload_url }}
        asset_path: ./sfinae-0.0.${{ github.run_number }}-win64.ZIP
        asset_name: sfinae-0.0.${{ github.run_number }}-win64.ZIP
        asset_content_type: application/zip

  linux-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
    - run: cmake --build . --config Release
    - run: cmake --build . --config Release --target package

    - name: Create Linux Release
      id: create_linux_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: linux_release_v${{ github.run_number }}
        release_name: Linux Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_linux_release.outputs.upload_url }}
        asset_path: ./sfinae-0.0.${{ github.run_number }}-Linux.deb
        asset_name: sfinae-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package
